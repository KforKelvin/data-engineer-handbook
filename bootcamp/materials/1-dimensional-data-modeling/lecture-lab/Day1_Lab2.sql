-- create table player_scd(
--     player_name text,
--     scoring_class scoring_class,
--     is_active bool,
--     start_season integer,
--     end_season integer,
--     current_season integer,
--     primary key (player_name, start_season)
-- );
-- drop table player_scd;
--
-- insert into player_scd
-- with with_previous as (
--
--     select
--         player_name,
--         current_season,
--         scoring_class,
--         is_active,
--         LAG(scoring_class, 1) over (partition by player_name order by current_season) as previous_scoring_class,
--         LAG(is_active, 1) over (partition by player_name order by current_season) as previous_is_active
--     from players
--     where current_season <= 2021
--
-- ),
--     with_indicators as(
--     select *,
--     case
--         when scoring_class <> previous_scoring_class then 1
--         when is_active <> previous_is_active then 1
--         else 0
--     end as change_indicator
-- from with_previous
-- ),
--     with_streaks as (
--     select *,
--         sum(change_indicator) over (partition by player_name order by current_season) as streak_identifier
--     from with_indicators
-- )
--
-- select player_name,
--         scoring_class,
--        is_active,
--        min(current_season) as start_season,
--        max(current_season) as end_season,
--        2021 as current_season
-- from with_streaks
-- group by player_name,streak_identifier,is_active, scoring_class order by player_name, streak_identifier;
--
-- select * from player_scd

--     with last_season_scd as(
--         select * from player_scd
--         where current_season = 2021
--         and end_season = 2021
--     ),
--     historical_scd as(
--         select * from player_scd
--         where current_season = 2021
--         and end_season < 2021
--     ),
--     this_season_data as(
--         select * from player_scd
--         where current_season = 2022
--     ),
--     unchanged_records as (
--       SELECT
--         ts.player_name,
--         ts.scoring_class,
--         ts.is_active,
--         ls.start_season,
--         ts.current_season as end_season
--     FROM this_season_data ts
--     JOIN last_season_scd ls
--     ON ls.player_name = ts.player_name
--     WHERE ts.scoring_class = ls.scoring_class
--     AND ts.is_active = ls.is_active
--     )
-- select * from unchanged_records





